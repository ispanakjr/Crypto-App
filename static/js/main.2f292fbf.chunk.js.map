{"version":3,"sources":["pokedex.js","pokemon.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","pokodexContainer","paddingTop","paddingLeft","paddingRight","cardMedia","margin","cardContent","textAlign","searchContainer","display","backgroundColor","fade","palette","common","white","paddingButtom","searchIcon","alignSelf","marginBottom","searchInput","width","Pokedex","props","classes","history","useState","pokemonData","setPokemonData","pokeFilter","setPokeFilter","useEffect","a","axios","get","response","data","results","console","log","pokemonReducer","prevValue","currentValue","index","pokeList","id","name","sprite","newPokemonData","reduce","getPokemonData","AppBar","position","Toolbar","className","TextField","onChange","e","target","value","label","Grid","container","spacing","Object","keys","map","pokemonId","includes","item","xs","sm","Card","onClick","push","CardMedia","image","style","height","CardContent","Typography","getPokemonCard","CircularProgress","card","maxWidth","borderRadius","header","textTransform","recep","avatar","red","cardHeader","padding","cagri","bolder","fontWeight","types","pokeHeader","Pokemon","useParams","undefined","pokemon","setPokemon","getPokemonById","species","weight","fullImageUrl","sprites","pokeContainer","Box","boxShadow","variant","CardHeader","Avatar","action","Link","underline","component","RouterLink","to","Button","color","title","content","align","mx","href","url","justify","type","getPokemonJSX","App","exact","path","render","createBrowserHistory","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.2f292fbf.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  CardMedia,\r\n  CircularProgress,\r\n  Typography,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport axios from \"axios\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  pokodexContainer: {\r\n    paddingTop: \"20px\",\r\n    paddingLeft: \"50px\",\r\n    paddingRight: \"50px\",\r\n  },\r\n  cardMedia: {\r\n    margin: \"auto\",\r\n  },\r\n  cardContent: {\r\n    textAlign: \"center\",\r\n  },\r\n  searchContainer: {\r\n    display: \"flex\",\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    paddingLeft: \"20px\",\r\n    paddingRight: \"20px\",\r\n    paddingTop: \"0\",\r\n    paddingButtom: \"0\",\r\n  },\r\n  searchIcon: {\r\n    alignSelf: \"flex-end\",\r\n    marginBottom: \"5px\",\r\n  },\r\n  searchInput: {\r\n    width: \"200px\",\r\n    margin: \"5px\",\r\n  },\r\n}));\r\n\r\nconst Pokedex = (props) => {\r\n  const classes = useStyles();\r\n  const { history } = props;\r\n  const [pokemonData, setPokemonData] = useState({});\r\n  const [pokeFilter, setPokeFilter] = useState(\"\");\r\n\r\n  const handleFilter = (e) => {\r\n    setPokeFilter(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getPokemonData = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          \"https://pokeapi.co/api/v2/pokemon?offset=0&limit=200\"\r\n        );\r\n        const { data } = response;\r\n        const { results } = data;\r\n        console.log(response);\r\n\r\n        const pokemonReducer = (prevValue, currentValue, index) => {\r\n          const pokeList = {\r\n            id: index + 1,\r\n            name: currentValue.name,\r\n            sprite: `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${\r\n              index + 1\r\n            }.png`,\r\n          };\r\n          const newPokeList = { ...prevValue, [index + 1]: pokeList };\r\n          return newPokeList;\r\n        };\r\n        const newPokemonData = results.reduce(pokemonReducer, {});\r\n        setPokemonData(newPokemonData);\r\n      } catch (err) {\r\n        setPokemonData(false);\r\n      }\r\n    };\r\n    getPokemonData();\r\n  }, []);\r\n\r\n  const getPokemonCard = (pokemonId) => {\r\n    const { id, name, sprite } = pokemonData[pokemonId];\r\n\r\n    return (\r\n      <Grid item xs={12} sm={4}>\r\n        <Card onClick={() => history.push(`/${pokemonId}`)}>\r\n          <CardMedia\r\n            className={classes.cardMedia}\r\n            image={sprite}\r\n            style={{ width: \"130px\", height: `130px` }}\r\n          />\r\n          <CardContent className={classes.cardContent}>\r\n            <Typography>{`${id}.${name}`}</Typography>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AppBar position=\"static\">\r\n\r\n        <Toolbar >\r\n          <div className = {classes.searchContainer}>\r\n            <SearchIcon className= {classes.searchIcon} />\r\n            <TextField \r\n            onChange = {handleFilter}\r\n            className={classes.searchInput} label=\"Search Pokemon\" />\r\n          </div>\r\n\r\n        </Toolbar>\r\n      </AppBar>\r\n      {pokemonData ? (\r\n        <Grid container spacing={3} className={classes.pokodexContainer}>\r\n          {Object.keys(pokemonData).map((pokemonId) =>\r\n              pokemonData[pokemonId].name.includes(pokeFilter) &&\r\n              getPokemonCard(pokemonId)\r\n          )}\r\n        </Grid>\r\n      ) : (\r\n        <CircularProgress />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Pokedex;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams, Link as RouterLink } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport {\r\n    Typography,\r\n    Link,\r\n    CircularProgress,\r\n    Button,\r\n    Grid,\r\n    Card,\r\n    CardContent,\r\n    CardActions,\r\n    CardMedia,\r\n    CardHeader,\r\n    Box,\r\n    Avatar,\r\n\r\n} from \"@material-ui/core\";\r\nimport { red } from '@material-ui/core/colors';\r\n\r\nconst useStyles = makeStyles({\r\n    card: {\r\n        maxWidth: \"500px\",\r\n        margin: \"25px auto\",\r\n        borderRadius: '40px'\r\n    },\r\n    header: {\r\n        textAlign: \"center\",\r\n        textTransform: \"capitalize\"\r\n    },\r\n    image: {\r\n        height: \"220px\",\r\n        width: \"220px\",\r\n        margin: 'auto'\r\n\r\n    },\r\n    recep: {\r\n        alignSelf: \"center\"\r\n    },\r\n    avatar: {\r\n        backgroundColor: red[500],\r\n        margin: 0,\r\n\r\n    },\r\n    cardHeader: {\r\n        padding: \"30px 35px 25px 35px\"\r\n    },\r\n    cagri: {\r\n        margin: 0,\r\n    },\r\n    bolder: {\r\n        fontWeight: \"bold\"\r\n    },\r\n    types: {\r\n        textTransform: \"uppercase\",\r\n    },\r\n    pokeHeader: {\r\n        margin: \"10px auto 20px\"\r\n    }\r\n\r\n\r\n});\r\n\r\nconst Pokemon = (props) => {\r\n    const { history } = props;\r\n    const { pokemonId } = useParams();\r\n    console.log(pokemonId);\r\n\r\n    const [pokemon, setPokemon] = useState(undefined);\r\n    // console.log(pokemon);\r\n\r\n    const classes = useStyles()\r\n\r\n\r\n    useEffect(() => {\r\n        const getPokemonById = async () => {\r\n            try {\r\n                const { data } = await axios.get(`https://pokeapi.co/api/v2/pokemon/${pokemonId}/`)\r\n                setPokemon(data);\r\n                console.log(data)\r\n\r\n            }\r\n            catch (err) {\r\n                console.log(err, \"Error\")\r\n            }\r\n        }\r\n        getPokemonById()\r\n\r\n\r\n    }, [pokemonId])\r\n\r\n\r\n    const getPokemonJSX = () => {\r\n        const { name, id, species, weight, height, types, sprites } = pokemon;\r\n        const fullImageUrl = `https://pokeres.bastionbot.org/images/pokemon/${id}.png`;\r\n\r\n\r\n\r\n        return (\r\n\r\n            <div className={classes.pokeContainer}>\r\n                <Box boxShadow={24} className={classes.card}>\r\n                    <Card variant=\"outlined\" className={classes.card}>\r\n                        <CardHeader className={classes.cardHeader} avatar={<Avatar className={classes.avatar}> {`${id}`} </Avatar>} classes={{ action: classes.recep, avatar: classes.cagri }} action={<Link underline=\"none\" component={RouterLink} to=\"/\"><Button variant=\"contained\" color=\"secondary\">Back Index</Button></Link>} title={<Typography className={classes.header} variant='h3'>{name}\r\n                        </Typography>} />\r\n\r\n                        <CardMedia className={classes.image} image={fullImageUrl} title=\"pokemon\" ></CardMedia>\r\n                        <CardContent className={classes.content}>\r\n                            <Typography align=\"center\" variant=\"h4\" className={classes.pokeHeader}>Pokemon Info</Typography>\r\n                            <Box mx={3}>\r\n                                <Grid container >\r\n\r\n                                    <Grid item xs={3}>\r\n\r\n                                        <Typography className={classes.bolder}>{'Species: '}</Typography>\r\n                                        <Typography className={classes.bolder}>Height:</Typography>\r\n                                        <Typography className={classes.bolder}>Weight:</Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={9}>\r\n                                        <Typography><Link color=\"inherit\" href={species.url}>{species.name}</Link></Typography>\r\n\r\n                                        <Typography>{height}</Typography>\r\n                                        <Typography>{weight}</Typography>\r\n\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Box>\r\n\r\n\r\n                            <Typography variant=\"h6\" align=\"center\" > Types</Typography>\r\n\r\n                            <Grid container justify=\"space-evenly\" >\r\n                                {types.map(({ type }) => {\r\n                                    return (\r\n                                        <Grid item >\r\n                                            <Typography className={classes.types} color='secondary' display=\"inline\" align=\"center\" key={type.name}>{`${type.name} `}</Typography>\r\n                                        </Grid>\r\n                                    )\r\n                                })}\r\n                            </Grid>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Box>\r\n\r\n\r\n\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            {pokemon === undefined && <CircularProgress />}\r\n            {pokemon !== undefined && pokemon && getPokemonJSX()}\r\n            {pokemon === false && <Typography>Pokemon not found! <Link component={RouterLink} to=\"/\"><Button variant=\"contained\">Back Index</Button></Link>\r\n            </Typography>}\r\n\r\n\r\n\r\n\r\n        </>\r\n    );\r\n\r\n};\r\n\r\nexport default Pokemon;","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport Pokedex from \"./pokedex\";\nimport Pokemon from \"./pokemon\";\n\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" render={(props) => <Pokedex {...props} />} />\n        <Route exact path=\"/:pokemonId\" render={(props) => <Pokemon {...props} />} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Router } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\n\nconst history = createBrowserHistory();\n\nReactDOM.render(\n    <Router history={history} >\n        <App />\n    </Router>, \n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}